// Code generated by goctl. DO NOT EDIT.
// Source: inventory.proto

package inventoryclient

import (
	"context"

	"mall/service/inventory/rpc/pb/inventory"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddressCreateRequest              = inventory.AddressCreateRequest
	AddressCreateResponse             = inventory.AddressCreateResponse
	AddressDetailRequest              = inventory.AddressDetailRequest
	AddressDetailResponse             = inventory.AddressDetailResponse
	AddressListRequest                = inventory.AddressListRequest
	AddressListResponse               = inventory.AddressListResponse
	AddressRemoveRequest              = inventory.AddressRemoveRequest
	AddressRemoveResponse             = inventory.AddressRemoveResponse
	AddressUpdateRequest              = inventory.AddressUpdateRequest
	AddressUpdateResponse             = inventory.AddressUpdateResponse
	ConfirmOutProductRequest          = inventory.ConfirmOutProductRequest
	ConfirmRecvProductRequest         = inventory.ConfirmRecvProductRequest
	CustwarehouseCreateRequest        = inventory.CustwarehouseCreateRequest
	CustwarehouseDetailResponse       = inventory.CustwarehouseDetailResponse
	CustwarehouseListResponse         = inventory.CustwarehouseListResponse
	CustwarehouseUpdateRequest        = inventory.CustwarehouseUpdateRequest
	InoutlogDetailResponse            = inventory.InoutlogDetailResponse
	InoutlogListResponse              = inventory.InoutlogListResponse
	InventoryCreateRequest            = inventory.InventoryCreateRequest
	InventoryDetailResponse           = inventory.InventoryDetailResponse
	InventoryListResponse             = inventory.InventoryListResponse
	InventoryUpdateRequest            = inventory.InventoryUpdateRequest
	LocateproductCreateRequest        = inventory.LocateproductCreateRequest
	LocateproductDetailResponse       = inventory.LocateproductDetailResponse
	LocateproductListResponse         = inventory.LocateproductListResponse
	LocateproductUpdateRequest        = inventory.LocateproductUpdateRequest
	LocationfeeDayqueryDetailResponse = inventory.LocationfeeDayqueryDetailResponse
	LocationfeeDayqueryRequest        = inventory.LocationfeeDayqueryRequest
	LocationfeeDayqueryResponse       = inventory.LocationfeeDayqueryResponse
	LocationfeeDetailResponse         = inventory.LocationfeeDetailResponse
	LocationfeeListResponse           = inventory.LocationfeeListResponse
	LogisticsCreateRequest            = inventory.LogisticsCreateRequest
	LogisticsDetailResponse           = inventory.LogisticsDetailResponse
	LogisticsListResponse             = inventory.LogisticsListResponse
	LogisticsUpdateRequest            = inventory.LogisticsUpdateRequest
	NormalDeleteRequest               = inventory.NormalDeleteRequest
	NormalDetailRequest               = inventory.NormalDetailRequest
	NormalEnabledRequest              = inventory.NormalEnabledRequest
	NormalIDListRequest               = inventory.NormalIDListRequest
	NormalIDStatusListRequest         = inventory.NormalIDStatusListRequest
	NormalListRequest                 = inventory.NormalListRequest
	NormalResponse                    = inventory.NormalResponse
	NormalResponsePdf                 = inventory.NormalResponsePdf
	NormalStatusListRequest           = inventory.NormalStatusListRequest
	OperproductCreateRequest          = inventory.OperproductCreateRequest
	OperproductDetailResponse         = inventory.OperproductDetailResponse
	OperproductListResponse           = inventory.OperproductListResponse
	OperproductUpdateRequest          = inventory.OperproductUpdateRequest
	OrderCreateRequest                = inventory.OrderCreateRequest
	OrderDetailResponse               = inventory.OrderDetailResponse
	OrderListResponse                 = inventory.OrderListResponse
	OrderUpdateRequest                = inventory.OrderUpdateRequest
	OrderaddressCreateRequest         = inventory.OrderaddressCreateRequest
	OrderaddressDetailResponse        = inventory.OrderaddressDetailResponse
	OrderaddressListResponse          = inventory.OrderaddressListResponse
	OrderaddressUpdateRequest         = inventory.OrderaddressUpdateRequest
	OrderproductCreateRequest         = inventory.OrderproductCreateRequest
	OrderproductDetailRequestEx       = inventory.OrderproductDetailRequestEx
	OrderproductDetailResponse        = inventory.OrderproductDetailResponse
	OrderproductDetailResponseEx      = inventory.OrderproductDetailResponseEx
	OrderproductListResponse          = inventory.OrderproductListResponse
	OrderproductUpdateRequest         = inventory.OrderproductUpdateRequest
	PalletPrintDetail                 = inventory.PalletPrintDetail
	PalletPrintListResponse           = inventory.PalletPrintListResponse
	PalletPrintRequest                = inventory.PalletPrintRequest
	PalletPrintResponse               = inventory.PalletPrintResponse
	ProchecklistCheckSingleExRequest  = inventory.ProchecklistCheckSingleExRequest
	ProchecklistCheckSingleExResponse = inventory.ProchecklistCheckSingleExResponse
	ProchecklistCheckSingleItem       = inventory.ProchecklistCheckSingleItem
	ProchecklistCheckSingleItemRes    = inventory.ProchecklistCheckSingleItemRes
	ProchecklistCheckSingleRequest    = inventory.ProchecklistCheckSingleRequest
	ProchecklistCheckSingleResponse   = inventory.ProchecklistCheckSingleResponse
	ProchecklistCheckWholeRequest     = inventory.ProchecklistCheckWholeRequest
	ProchecklistCreateRequest         = inventory.ProchecklistCreateRequest
	ProchecklistDetailResponse        = inventory.ProchecklistDetailResponse
	ProchecklistListResponse          = inventory.ProchecklistListResponse
	ProchecklistUpdatePalletResponse  = inventory.ProchecklistUpdatePalletResponse
	ProchecklistUpdateRequest         = inventory.ProchecklistUpdateRequest
	ProductCreateRequest              = inventory.ProductCreateRequest
	ProductCreateResponse             = inventory.ProductCreateResponse
	ProductDetailRequest              = inventory.ProductDetailRequest
	ProductDetailResponse             = inventory.ProductDetailResponse
	ProductListRequest                = inventory.ProductListRequest
	ProductListResponse               = inventory.ProductListResponse
	ProductRemoveRequest              = inventory.ProductRemoveRequest
	ProductRemoveResponse             = inventory.ProductRemoveResponse
	ProductUpdateRequest              = inventory.ProductUpdateRequest
	ProductUpdateResponse             = inventory.ProductUpdateResponse
	ProductlocationDetailResponse     = inventory.ProductlocationDetailResponse
	ProductlocationListResponse       = inventory.ProductlocationListResponse
	RepairCreateRequest               = inventory.RepairCreateRequest
	RepairCreateResponse              = inventory.RepairCreateResponse
	RepairDetailRequest               = inventory.RepairDetailRequest
	RepairDetailResponse              = inventory.RepairDetailResponse
	RepairListRequest                 = inventory.RepairListRequest
	RepairListResponse                = inventory.RepairListResponse
	RepairRemoveRequest               = inventory.RepairRemoveRequest
	RepairRemoveResponse              = inventory.RepairRemoveResponse
	RepairUpdateRequest               = inventory.RepairUpdateRequest
	RepairUpdateResponse              = inventory.RepairUpdateResponse
	StorelocationCreateRequest        = inventory.StorelocationCreateRequest
	StorelocationCreateResponse       = inventory.StorelocationCreateResponse
	StorelocationDetailRequest        = inventory.StorelocationDetailRequest
	StorelocationDetailResponse       = inventory.StorelocationDetailResponse
	StorelocationListRequest          = inventory.StorelocationListRequest
	StorelocationListResponse         = inventory.StorelocationListResponse
	StorelocationMulCreateRequest     = inventory.StorelocationMulCreateRequest
	StorelocationMulCreateResponse    = inventory.StorelocationMulCreateResponse
	StorelocationRemoveRequest        = inventory.StorelocationRemoveRequest
	StorelocationRemoveResponse       = inventory.StorelocationRemoveResponse
	StorelocationUpdateRequest        = inventory.StorelocationUpdateRequest
	StorelocationUpdateResponse       = inventory.StorelocationUpdateResponse
	TokenUser                         = inventory.TokenUser
	WarehouseCreateRequest            = inventory.WarehouseCreateRequest
	WarehouseCreateResponse           = inventory.WarehouseCreateResponse
	WarehouseDetailRequest            = inventory.WarehouseDetailRequest
	WarehouseDetailResponse           = inventory.WarehouseDetailResponse
	WarehouseListRequest              = inventory.WarehouseListRequest
	WarehouseListResponse             = inventory.WarehouseListResponse
	WarehouseRemoveRequest            = inventory.WarehouseRemoveRequest
	WarehouseRemoveResponse           = inventory.WarehouseRemoveResponse
	WarehouseUpdateRequest            = inventory.WarehouseUpdateRequest
	WarehouseUpdateResponse           = inventory.WarehouseUpdateResponse
	WaveCreateRequest                 = inventory.WaveCreateRequest
	WaveDetailResponse                = inventory.WaveDetailResponse
	WaveListResponse                  = inventory.WaveListResponse
	WaveProductDetailResponse         = inventory.WaveProductDetailResponse
	WaveProductListResponse           = inventory.WaveProductListResponse
	WmsProductCreateRequest           = inventory.WmsProductCreateRequest
	WmsProductCreateResponse          = inventory.WmsProductCreateResponse
	WmsProductDetailRequest           = inventory.WmsProductDetailRequest
	WmsProductDetailResponse          = inventory.WmsProductDetailResponse
	WmsProductListRequest             = inventory.WmsProductListRequest
	WmsProductListResponse            = inventory.WmsProductListResponse
	WmsProductRemoveRequest           = inventory.WmsProductRemoveRequest
	WmsProductRemoveResponse          = inventory.WmsProductRemoveResponse
	WmsProductUpdateRequest           = inventory.WmsProductUpdateRequest
	WmsProductUpdateResponse          = inventory.WmsProductUpdateResponse
	WorkerorderCreateRequest          = inventory.WorkerorderCreateRequest
	WorkerorderDetailResponse         = inventory.WorkerorderDetailResponse
	WorkerorderListResponse           = inventory.WorkerorderListResponse
	WorkerorderUpdateRequest          = inventory.WorkerorderUpdateRequest

	InventoryClient interface {
		//
		InventoryDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		InventoryCreate(ctx context.Context, in *InventoryCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		InventoryUpdate(ctx context.Context, in *InventoryUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		InventoryDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*InventoryDetailResponse, error)
		InventoryOne(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*InventoryDetailResponse, error)
		InventoryList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*InventoryListResponse, error)
		ProchecklistDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		ProchecklistCheckSingle(ctx context.Context, in *ProchecklistCheckSingleRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleResponse, error)
		ProchecklistCheckWhole(ctx context.Context, in *ProchecklistCheckSingleRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleResponse, error)
		ProchecklistCheckSingleEx(ctx context.Context, in *ProchecklistCheckSingleExRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleExResponse, error)
		ProchecklistCheckWholeEx(ctx context.Context, in *ProchecklistCheckSingleExRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleExResponse, error)
		ProchecklistCreate(ctx context.Context, in *ProchecklistCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		ProchecklistUpdate(ctx context.Context, in *ProchecklistUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		ProchecklistDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*ProchecklistDetailResponse, error)
		ProchecklistList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error)
		ProchecklistListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error)
		OperproductDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OperproductCreate(ctx context.Context, in *OperproductCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OperproductUpdate(ctx context.Context, in *OperproductUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OperproductDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OperproductDetailResponse, error)
		OperproductList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*OperproductListResponse, error)
		LocateproductDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		LocateproductCreate(ctx context.Context, in *LocateproductCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		LocateproductUpdate(ctx context.Context, in *LocateproductUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		LocateproductDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*LocateproductDetailResponse, error)
		LocateproductList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*LocateproductListResponse, error)
		OrderDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderCreate(ctx context.Context, in *OrderCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderUpdate(ctx context.Context, in *OrderUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderDetailResponse, error)
		OrderGetLastDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderDetailResponse, error)
		OrderList(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*OrderListResponse, error)
		OrderClone(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderaddressDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderaddressCreate(ctx context.Context, in *OrderaddressCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderaddressUpdate(ctx context.Context, in *OrderaddressUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderaddressDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderaddressDetailResponse, error)
		OrderaddressList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*OrderaddressListResponse, error)
		OrderproductDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderproductCreate(ctx context.Context, in *OrderproductCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderproductUpdate(ctx context.Context, in *OrderproductUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		OrderproductDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderproductDetailResponse, error)
		OrderproductList(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error)
		WmsOrderproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error)
		WmsOrderUserproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error)
		WmsPurchaseproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error)
		WmsPurchaseproductListEx(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error)
		WmsPurchaseUserproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error)
		WmsOrderUserproductListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error)
		WmsPurchaseListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error)
		WmsProcheckPurchaseProductListEx(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error)
		LogisticsDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		LogisticsCreate(ctx context.Context, in *LogisticsCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		LogisticsUpdate(ctx context.Context, in *LogisticsUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		LogisticsDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*LogisticsDetailResponse, error)
		LogisticsList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*LogisticsListResponse, error)
		WorkerorderDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WorkerorderCreate(ctx context.Context, in *WorkerorderCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WorkerorderUpdate(ctx context.Context, in *WorkerorderUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WorkerorderDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*WorkerorderDetailResponse, error)
		WorkerorderList(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*WorkerorderListResponse, error)
		WorkerorderOrderlist(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*WorkerorderListResponse, error)
		WaveCreate(ctx context.Context, in *WaveCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WaveOperator(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WaveProductUpdateStatus(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		Wavelist(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*WaveListResponse, error)
		WaveProductlist(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*WaveProductListResponse, error)
		WaveOrderlist(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*WorkerorderListResponse, error)
		WaveOrderProductlist(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error)
		WaveConfirmOutProduct(ctx context.Context, in *ConfirmOutProductRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WaveConfirmOutProductEx(ctx context.Context, in *ConfirmOutProductRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WaveOrderproductListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error)
		Inoutloglist(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*InoutlogListResponse, error)
		Locationfeelist(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*LocationfeeListResponse, error)
		LocationfeeDayQeryList(ctx context.Context, in *LocationfeeDayqueryRequest, opts ...grpc.CallOption) (*LocationfeeDayqueryResponse, error)
		ConfirmRecvProduct(ctx context.Context, in *ConfirmRecvProductRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		ConfirmOutProduct(ctx context.Context, in *ConfirmOutProductRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		CustwarehouseDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		CustwarehouseCreate(ctx context.Context, in *CustwarehouseCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		CustwarehouseUpdate(ctx context.Context, in *CustwarehouseUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		CustwarehouseDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*CustwarehouseDetailResponse, error)
		CustwarehouseList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*CustwarehouseListResponse, error)
		CustwarehouseListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*CustwarehouseListResponse, error)
		AddressList(ctx context.Context, in *AddressListRequest, opts ...grpc.CallOption) (*AddressListResponse, error)
		AddressDetail(ctx context.Context, in *AddressDetailRequest, opts ...grpc.CallOption) (*AddressDetailResponse, error)
		AddressCreate(ctx context.Context, in *AddressCreateRequest, opts ...grpc.CallOption) (*AddressCreateResponse, error)
		AddressUpdate(ctx context.Context, in *AddressUpdateRequest, opts ...grpc.CallOption) (*AddressUpdateResponse, error)
		AddressDelete(ctx context.Context, in *AddressRemoveRequest, opts ...grpc.CallOption) (*AddressRemoveResponse, error)
		ProductList(ctx context.Context, in *ProductListRequest, opts ...grpc.CallOption) (*ProductListResponse, error)
		ProductListAdmin(ctx context.Context, in *ProductListRequest, opts ...grpc.CallOption) (*ProductListResponse, error)
		ProductDetail(ctx context.Context, in *ProductDetailRequest, opts ...grpc.CallOption) (*ProductDetailResponse, error)
		ProductCreate(ctx context.Context, in *ProductCreateRequest, opts ...grpc.CallOption) (*ProductCreateResponse, error)
		ProductUpdate(ctx context.Context, in *ProductUpdateRequest, opts ...grpc.CallOption) (*ProductUpdateResponse, error)
		ProductDelete(ctx context.Context, in *ProductRemoveRequest, opts ...grpc.CallOption) (*ProductRemoveResponse, error)
		WarehouseList(ctx context.Context, in *WarehouseListRequest, opts ...grpc.CallOption) (*WarehouseListResponse, error)
		WarehouseEnable(ctx context.Context, in *NormalEnabledRequest, opts ...grpc.CallOption) (*NormalResponse, error)
		WarehouseDetail(ctx context.Context, in *WarehouseDetailRequest, opts ...grpc.CallOption) (*WarehouseDetailResponse, error)
		WarehouseCreate(ctx context.Context, in *WarehouseCreateRequest, opts ...grpc.CallOption) (*WarehouseCreateResponse, error)
		WarehouseUpdate(ctx context.Context, in *WarehouseUpdateRequest, opts ...grpc.CallOption) (*WarehouseUpdateResponse, error)
		WarehouseDelete(ctx context.Context, in *WarehouseRemoveRequest, opts ...grpc.CallOption) (*WarehouseRemoveResponse, error)
		StorelocationList(ctx context.Context, in *StorelocationListRequest, opts ...grpc.CallOption) (*StorelocationListResponse, error)
		StorelocationListEx(ctx context.Context, in *StorelocationListRequest, opts ...grpc.CallOption) (*StorelocationListResponse, error)
		StorelocationDetail(ctx context.Context, in *StorelocationDetailRequest, opts ...grpc.CallOption) (*StorelocationDetailResponse, error)
		StorelocationCreate(ctx context.Context, in *StorelocationCreateRequest, opts ...grpc.CallOption) (*StorelocationCreateResponse, error)
		StorelocationUpdate(ctx context.Context, in *StorelocationUpdateRequest, opts ...grpc.CallOption) (*StorelocationUpdateResponse, error)
		StorelocationDelete(ctx context.Context, in *StorelocationRemoveRequest, opts ...grpc.CallOption) (*StorelocationRemoveResponse, error)
		StorelocationMulCreate(ctx context.Context, in *StorelocationMulCreateRequest, opts ...grpc.CallOption) (*StorelocationMulCreateResponse, error)
		StorelocationLocListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error)
		StorelocationMulCreateEx(ctx context.Context, in *StorelocationMulCreateRequest, opts ...grpc.CallOption) (*StorelocationMulCreateResponse, error)
		StorelocationLocListPdfEx(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error)
		StorelocationListPdf(ctx context.Context, in *StorelocationListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error)
		WmsProductList(ctx context.Context, in *WmsProductListRequest, opts ...grpc.CallOption) (*WmsProductListResponse, error)
		WmsProductDetail(ctx context.Context, in *WmsProductDetailRequest, opts ...grpc.CallOption) (*WmsProductDetailResponse, error)
		WmsProductCreate(ctx context.Context, in *WmsProductCreateRequest, opts ...grpc.CallOption) (*WmsProductCreateResponse, error)
		WmsProductUpdate(ctx context.Context, in *WmsProductUpdateRequest, opts ...grpc.CallOption) (*WmsProductUpdateResponse, error)
		WmsProductDelete(ctx context.Context, in *WmsProductRemoveRequest, opts ...grpc.CallOption) (*WmsProductRemoveResponse, error)
		RepairList(ctx context.Context, in *RepairListRequest, opts ...grpc.CallOption) (*RepairListResponse, error)
		RepairListEx(ctx context.Context, in *RepairListRequest, opts ...grpc.CallOption) (*RepairListResponse, error)
		RepairDetail(ctx context.Context, in *RepairDetailRequest, opts ...grpc.CallOption) (*RepairDetailResponse, error)
		RepairCreate(ctx context.Context, in *RepairCreateRequest, opts ...grpc.CallOption) (*RepairCreateResponse, error)
		RepairUpdate(ctx context.Context, in *RepairUpdateRequest, opts ...grpc.CallOption) (*RepairUpdateResponse, error)
		RepairDelete(ctx context.Context, in *RepairRemoveRequest, opts ...grpc.CallOption) (*RepairRemoveResponse, error)
		CustProductStoreDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*ProductlocationDetailResponse, error)
		CustProductStoreList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error)
		CustProductStoreListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error)
		CustProductLocationDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*ProductlocationDetailResponse, error)
		CustProductLocationList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error)
		CustProductLocationListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error)
		PalletPrintList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*PalletPrintListResponse, error)
		PalletPrintDetail(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*PalletPrintListResponse, error)
		PalletPrint(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*PalletPrintResponse, error)
		PalletPrintUpdate(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*PalletPrintListResponse, error)
		ProchecklistUpdatePallet(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*ProchecklistUpdatePalletResponse, error)
	}

	defaultInventoryClient struct {
		cli zrpc.Client
	}
)

func NewInventoryClient(cli zrpc.Client) InventoryClient {
	return &defaultInventoryClient{
		cli: cli,
	}
}

func (m *defaultInventoryClient) InventoryDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.InventoryDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) InventoryCreate(ctx context.Context, in *InventoryCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.InventoryCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) InventoryUpdate(ctx context.Context, in *InventoryUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.InventoryUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) InventoryDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*InventoryDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.InventoryDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) InventoryOne(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*InventoryDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.InventoryOne(ctx, in, opts...)
}

func (m *defaultInventoryClient) InventoryList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*InventoryListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.InventoryList(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistCheckSingle(ctx context.Context, in *ProchecklistCheckSingleRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistCheckSingle(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistCheckWhole(ctx context.Context, in *ProchecklistCheckSingleRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistCheckWhole(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistCheckSingleEx(ctx context.Context, in *ProchecklistCheckSingleExRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleExResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistCheckSingleEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistCheckWholeEx(ctx context.Context, in *ProchecklistCheckSingleExRequest, opts ...grpc.CallOption) (*ProchecklistCheckSingleExResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistCheckWholeEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistCreate(ctx context.Context, in *ProchecklistCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistUpdate(ctx context.Context, in *ProchecklistUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*ProchecklistDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistList(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) OperproductDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OperproductDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) OperproductCreate(ctx context.Context, in *OperproductCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OperproductCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OperproductUpdate(ctx context.Context, in *OperproductUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OperproductUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OperproductDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OperproductDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OperproductDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) OperproductList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*OperproductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OperproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) LocateproductDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LocateproductDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) LocateproductCreate(ctx context.Context, in *LocateproductCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LocateproductCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) LocateproductUpdate(ctx context.Context, in *LocateproductUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LocateproductUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) LocateproductDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*LocateproductDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LocateproductDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) LocateproductList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*LocateproductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LocateproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderCreate(ctx context.Context, in *OrderCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderUpdate(ctx context.Context, in *OrderUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderGetLastDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderGetLastDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderList(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*OrderListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderList(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderClone(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderClone(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderaddressDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderaddressDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderaddressCreate(ctx context.Context, in *OrderaddressCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderaddressCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderaddressUpdate(ctx context.Context, in *OrderaddressUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderaddressUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderaddressDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderaddressDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderaddressDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderaddressList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*OrderaddressListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderaddressList(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderproductDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderproductDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderproductCreate(ctx context.Context, in *OrderproductCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderproductCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderproductUpdate(ctx context.Context, in *OrderproductUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderproductUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderproductDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*OrderproductDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderproductDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) OrderproductList(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.OrderproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsOrderproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsOrderproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsOrderUserproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsOrderUserproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsPurchaseproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsPurchaseproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsPurchaseproductListEx(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsPurchaseproductListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsPurchaseUserproductList(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsPurchaseUserproductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsOrderUserproductListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsOrderUserproductListPdf(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsPurchaseListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsPurchaseListPdf(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsProcheckPurchaseProductListEx(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*ProchecklistListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsProcheckPurchaseProductListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) LogisticsDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LogisticsDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) LogisticsCreate(ctx context.Context, in *LogisticsCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LogisticsCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) LogisticsUpdate(ctx context.Context, in *LogisticsUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LogisticsUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) LogisticsDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*LogisticsDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LogisticsDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) LogisticsList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*LogisticsListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LogisticsList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WorkerorderDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WorkerorderDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) WorkerorderCreate(ctx context.Context, in *WorkerorderCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WorkerorderCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WorkerorderUpdate(ctx context.Context, in *WorkerorderUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WorkerorderUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WorkerorderDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*WorkerorderDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WorkerorderDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) WorkerorderList(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*WorkerorderListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WorkerorderList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WorkerorderOrderlist(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*WorkerorderListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WorkerorderOrderlist(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveCreate(ctx context.Context, in *WaveCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveOperator(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveOperator(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveProductUpdateStatus(ctx context.Context, in *NormalStatusListRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveProductUpdateStatus(ctx, in, opts...)
}

func (m *defaultInventoryClient) Wavelist(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*WaveListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.Wavelist(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveProductlist(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*WaveProductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveProductlist(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveOrderlist(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*WorkerorderListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveOrderlist(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveOrderProductlist(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*OrderproductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveOrderProductlist(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveConfirmOutProduct(ctx context.Context, in *ConfirmOutProductRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveConfirmOutProduct(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveConfirmOutProductEx(ctx context.Context, in *ConfirmOutProductRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveConfirmOutProductEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) WaveOrderproductListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WaveOrderproductListPdf(ctx, in, opts...)
}

func (m *defaultInventoryClient) Inoutloglist(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*InoutlogListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.Inoutloglist(ctx, in, opts...)
}

func (m *defaultInventoryClient) Locationfeelist(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*LocationfeeListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.Locationfeelist(ctx, in, opts...)
}

func (m *defaultInventoryClient) LocationfeeDayQeryList(ctx context.Context, in *LocationfeeDayqueryRequest, opts ...grpc.CallOption) (*LocationfeeDayqueryResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.LocationfeeDayQeryList(ctx, in, opts...)
}

func (m *defaultInventoryClient) ConfirmRecvProduct(ctx context.Context, in *ConfirmRecvProductRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ConfirmRecvProduct(ctx, in, opts...)
}

func (m *defaultInventoryClient) ConfirmOutProduct(ctx context.Context, in *ConfirmOutProductRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ConfirmOutProduct(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustwarehouseDelete(ctx context.Context, in *NormalDeleteRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustwarehouseDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustwarehouseCreate(ctx context.Context, in *CustwarehouseCreateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustwarehouseCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustwarehouseUpdate(ctx context.Context, in *CustwarehouseUpdateRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustwarehouseUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustwarehouseDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*CustwarehouseDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustwarehouseDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustwarehouseList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*CustwarehouseListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustwarehouseList(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustwarehouseListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*CustwarehouseListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustwarehouseListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) AddressList(ctx context.Context, in *AddressListRequest, opts ...grpc.CallOption) (*AddressListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.AddressList(ctx, in, opts...)
}

func (m *defaultInventoryClient) AddressDetail(ctx context.Context, in *AddressDetailRequest, opts ...grpc.CallOption) (*AddressDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.AddressDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) AddressCreate(ctx context.Context, in *AddressCreateRequest, opts ...grpc.CallOption) (*AddressCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.AddressCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) AddressUpdate(ctx context.Context, in *AddressUpdateRequest, opts ...grpc.CallOption) (*AddressUpdateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.AddressUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) AddressDelete(ctx context.Context, in *AddressRemoveRequest, opts ...grpc.CallOption) (*AddressRemoveResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.AddressDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProductList(ctx context.Context, in *ProductListRequest, opts ...grpc.CallOption) (*ProductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProductListAdmin(ctx context.Context, in *ProductListRequest, opts ...grpc.CallOption) (*ProductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProductListAdmin(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProductDetail(ctx context.Context, in *ProductDetailRequest, opts ...grpc.CallOption) (*ProductDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProductDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProductCreate(ctx context.Context, in *ProductCreateRequest, opts ...grpc.CallOption) (*ProductCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProductCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProductUpdate(ctx context.Context, in *ProductUpdateRequest, opts ...grpc.CallOption) (*ProductUpdateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProductUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProductDelete(ctx context.Context, in *ProductRemoveRequest, opts ...grpc.CallOption) (*ProductRemoveResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProductDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) WarehouseList(ctx context.Context, in *WarehouseListRequest, opts ...grpc.CallOption) (*WarehouseListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WarehouseList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WarehouseEnable(ctx context.Context, in *NormalEnabledRequest, opts ...grpc.CallOption) (*NormalResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WarehouseEnable(ctx, in, opts...)
}

func (m *defaultInventoryClient) WarehouseDetail(ctx context.Context, in *WarehouseDetailRequest, opts ...grpc.CallOption) (*WarehouseDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WarehouseDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) WarehouseCreate(ctx context.Context, in *WarehouseCreateRequest, opts ...grpc.CallOption) (*WarehouseCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WarehouseCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WarehouseUpdate(ctx context.Context, in *WarehouseUpdateRequest, opts ...grpc.CallOption) (*WarehouseUpdateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WarehouseUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WarehouseDelete(ctx context.Context, in *WarehouseRemoveRequest, opts ...grpc.CallOption) (*WarehouseRemoveResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WarehouseDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationList(ctx context.Context, in *StorelocationListRequest, opts ...grpc.CallOption) (*StorelocationListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationList(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationListEx(ctx context.Context, in *StorelocationListRequest, opts ...grpc.CallOption) (*StorelocationListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationDetail(ctx context.Context, in *StorelocationDetailRequest, opts ...grpc.CallOption) (*StorelocationDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationCreate(ctx context.Context, in *StorelocationCreateRequest, opts ...grpc.CallOption) (*StorelocationCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationUpdate(ctx context.Context, in *StorelocationUpdateRequest, opts ...grpc.CallOption) (*StorelocationUpdateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationDelete(ctx context.Context, in *StorelocationRemoveRequest, opts ...grpc.CallOption) (*StorelocationRemoveResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationMulCreate(ctx context.Context, in *StorelocationMulCreateRequest, opts ...grpc.CallOption) (*StorelocationMulCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationMulCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationLocListPdf(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationLocListPdf(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationMulCreateEx(ctx context.Context, in *StorelocationMulCreateRequest, opts ...grpc.CallOption) (*StorelocationMulCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationMulCreateEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationLocListPdfEx(ctx context.Context, in *NormalIDListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationLocListPdfEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) StorelocationListPdf(ctx context.Context, in *StorelocationListRequest, opts ...grpc.CallOption) (*NormalResponsePdf, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.StorelocationListPdf(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsProductList(ctx context.Context, in *WmsProductListRequest, opts ...grpc.CallOption) (*WmsProductListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsProductList(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsProductDetail(ctx context.Context, in *WmsProductDetailRequest, opts ...grpc.CallOption) (*WmsProductDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsProductDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsProductCreate(ctx context.Context, in *WmsProductCreateRequest, opts ...grpc.CallOption) (*WmsProductCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsProductCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsProductUpdate(ctx context.Context, in *WmsProductUpdateRequest, opts ...grpc.CallOption) (*WmsProductUpdateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsProductUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) WmsProductDelete(ctx context.Context, in *WmsProductRemoveRequest, opts ...grpc.CallOption) (*WmsProductRemoveResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.WmsProductDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) RepairList(ctx context.Context, in *RepairListRequest, opts ...grpc.CallOption) (*RepairListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.RepairList(ctx, in, opts...)
}

func (m *defaultInventoryClient) RepairListEx(ctx context.Context, in *RepairListRequest, opts ...grpc.CallOption) (*RepairListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.RepairListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) RepairDetail(ctx context.Context, in *RepairDetailRequest, opts ...grpc.CallOption) (*RepairDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.RepairDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) RepairCreate(ctx context.Context, in *RepairCreateRequest, opts ...grpc.CallOption) (*RepairCreateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.RepairCreate(ctx, in, opts...)
}

func (m *defaultInventoryClient) RepairUpdate(ctx context.Context, in *RepairUpdateRequest, opts ...grpc.CallOption) (*RepairUpdateResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.RepairUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) RepairDelete(ctx context.Context, in *RepairRemoveRequest, opts ...grpc.CallOption) (*RepairRemoveResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.RepairDelete(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustProductStoreDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*ProductlocationDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustProductStoreDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustProductStoreList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustProductStoreList(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustProductStoreListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustProductStoreListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustProductLocationDetail(ctx context.Context, in *NormalDetailRequest, opts ...grpc.CallOption) (*ProductlocationDetailResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustProductLocationDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustProductLocationList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustProductLocationList(ctx, in, opts...)
}

func (m *defaultInventoryClient) CustProductLocationListEx(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*ProductlocationListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.CustProductLocationListEx(ctx, in, opts...)
}

func (m *defaultInventoryClient) PalletPrintList(ctx context.Context, in *NormalListRequest, opts ...grpc.CallOption) (*PalletPrintListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.PalletPrintList(ctx, in, opts...)
}

func (m *defaultInventoryClient) PalletPrintDetail(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*PalletPrintListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.PalletPrintDetail(ctx, in, opts...)
}

func (m *defaultInventoryClient) PalletPrint(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*PalletPrintResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.PalletPrint(ctx, in, opts...)
}

func (m *defaultInventoryClient) PalletPrintUpdate(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*PalletPrintListResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.PalletPrintUpdate(ctx, in, opts...)
}

func (m *defaultInventoryClient) ProchecklistUpdatePallet(ctx context.Context, in *PalletPrintRequest, opts ...grpc.CallOption) (*ProchecklistUpdatePalletResponse, error) {
	client := inventory.NewInventoryClientClient(m.cli.Conn())
	return client.ProchecklistUpdatePallet(ctx, in, opts...)
}
